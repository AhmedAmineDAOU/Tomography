

----------------------------------
---- TP no4 ---------------------
----------------------------------

Creer un repertoire TP4 et copier ces progs dans ce repertoire


4 nouvelles fonctions sont a votre disposition:

-------------------------

  //-----------------------
  //Nouvelles Fonctions ---
  //-----------------------
  /*----------------------------------------------------------------------*/
  /* Transforme de Fourier monodimensionnelle:                            */
  /* ----------------------------------------                             */
  /* FFT1D(VctR,VctI,WIDTH)                                               */
  /*                                                                      */
  /* VctR: vecteur associe au valeurs reelles                             */   
  /* VctI: vecteur associe au valeurs imaginaires                         */
  /* WIDTH      : Largeur des deux vecteurs                               */
  /* ------                                                               */
  /* Resultat de cette FFT:                                               */
  /* VctR: Partie reelle de la FFT                                        */
  /* VctI: Partie imaginaire de la FFT                                    */
  /*----------------------------------------------------------------------*/    
  /*----------------------------------------------------------------------*/
  /* Transforme de Fourier monodimensionnelle inverse:                    */
  /* ------------------------------------------------                     */
  /* IFFTDD(VctR,VctI,WIDTH)                                              */
  /*                                                                      */ 
  /* VctR: vecteur associe au valeurs reelles                             */   
  /* VctI: vecteur associe au valeurs imaginaires                         */
  /* WIDTH      : Largeur des deux vecteurs                               */
  /* ------                                                               */
  /* Resultat de cette FFT inverse:                                       */
  /* VctR: Partie reelle de la FFT inverse                                */
  /* VctI: Partie imaginaire de la FFT inverse                            */
  /*----------------------------------------------------------------------*/   
  /*----------------------------------------------------------------------*/
  /* ReMkeVct(Vct,WIDTH)                                                  */
  /* --------------------------                                           */
  /* Recadre le Vecteur Vct de largeur WIDTH                              */
  /* selon les 2 cadrants                                                 */
  /*----------------------------------------------------------------------*/  
  /*----------------------------------------------------------------------*/
  /* Module de la FFT1D                                                   */
  /* ------------------                                                   */
  /* ModVct(VctM,VctR,VctI,WIDTH)                                         */ 
  /*                                                                      */
  /* VctR: partie reelle du vecteur                                       */
  /* VctI: partie imaginaire du vecteur                                   */
  /* ------                                                               */
  /* Resultat:                                                            */
  /* VctM: module du vecteur                                              */
  /*----------------------------------------------------------------------*/

de plus je vous donne:


/*----------------------------------------------------*/
/* angle en degre entre BA et BC                      */
/* A(ptar,ptac) - B(ptbr,ptbc) - C(ptcr,ptcc)         */
/*----------------------------------------------------*/
float AngleDeg(int ptar,int ptac,int ptbr,int ptbc,int ptcr,int ptcc)
{
 float num,den;
 float angle;

 //initialisation
 num=den=angle=0.0;

 //calcul potentiel
 num+=(float)(ptac-ptbc)*(ptcc-ptbc);
 num+=(float)(ptar-ptbr)*(ptcr-ptbr);
 den+=(float)sqrt(CARRE(ptac-ptbc)+CARRE(ptar-ptbr));
 den*=(float)sqrt(CARRE(ptcc-ptbc)+CARRE(ptcr-ptbr));

 if (den!=0.0) angle=acos(num/den);
 else angle=0.0;

 if (ptar>ptcr) angle=2*PI-angle;

 return (angle*(180.0/PI));
}

-------------------------

Le programme TpIFT6150-4-1 chargera l'image lenna dans une
matrice et l'affichera a l'ecran.

 Bon TP, 












 
